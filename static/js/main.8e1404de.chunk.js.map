{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","background","borderRadius","border","color","height","padding","boxShadow","label","textTransform","p","fontWeight","lineHeight","margin","spacing","width","marginTop","backgroundColor","options","App","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","classes","className","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","onClose","PaperProps","style","maxHeight","ITEM_HEIGHT","map","option","MenuItem","selected","Typography","variant","component","gutterBottom","Button","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,WAAY,mDACZC,aAAc,EACdC,OAAQ,EACRC,MAAO,QACPC,OAAQ,OACRC,QAAS,YACTC,UAAW,yCAEbC,MAAO,CACLC,cAAe,cAEjBC,EAAG,CACDN,MAAO,UACPO,WAAY,OACZL,QAAS,YACTM,WAAY,OAEdC,OAAQ,CACNA,OAAQd,EAAMe,QAAQ,GACtBC,MAAO,QACPb,aAAc,OACdG,OAAQ,OACRW,UAAW,OACXC,gBAAiB,UACjBb,MAAO,aAILc,EAAU,CAAC,qBAAsB,UAAW,UAAW,gBA6F9CC,MA1Ff,WAAgB,IAAD,EACmBC,IAAMC,SAAS,MADlC,mBACNC,EADM,KACIC,EADJ,KAEPC,EAAOC,QAAQH,GAMfI,EAAc,WAClBH,EAAY,OAERI,EAAU9B,IAEhB,OACE,sBAAK+B,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,cAACC,EAAA,EAAD,CACEC,aAAW,OACXC,gBAAc,YACdC,gBAAc,OACdC,QAhBY,SAACC,GACnBX,EAAYW,EAAMC,gBAWd,SAME,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CACEC,GAAG,YACHf,SAAUA,EACVgB,aAAW,EACXd,KAAMA,EACNe,QAASb,EACTc,WAAY,CACVC,MAAO,CACLC,UAAWC,IACX5B,MAAO,SATb,SAaGG,EAAQ0B,KAAI,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,CAEEC,SAAqB,UAAXF,EACVZ,QAASP,EAHX,SAKGmB,GAJIA,WASb,8BACE,eAACG,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,KACVC,cAAY,EACZxB,QAAS,CACP3B,KAAM2B,EAAQ3B,KACdQ,MAAOmB,EAAQnB,OANnB,uBASY,uBATZ,aAS+B,uBAT/B,eAYF,sBAAKoB,UAAU,OAAf,UACG,IACD,cAACoB,EAAA,EAAD,CACEC,QAAQ,IACRC,UAAU,IACVC,cAAY,EACZxB,QAAS,CACPjB,EAAGiB,EAAQjB,GALf,wSAeF,cAAC0C,EAAA,EAAD,CACEH,QAAQ,YACRI,KAAK,QACLjD,MAAM,UACNwB,UAAWD,EAAQd,OAJrB,uBC7GSyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8e1404de.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ReorderRoundedIcon from \"@material-ui/icons/ReorderRounded\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n    borderRadius: 3,\n    border: 0,\n    color: \"white\",\n    height: \"110%\",\n    padding: \"50px 20px\",\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n  },\n  p: {\n    color: \"#FF8E53\",\n    fontWeight: \"10px\",\n    padding: \"20px 20px\",\n    lineHeight: \"1.6\",\n  },\n  margin: {\n    margin: theme.spacing(2),\n    width: \"170px\",\n    borderRadius: \"40px\",\n    height: \"60px\",\n    marginTop: \"70px\",\n    backgroundColor: \"#FE6B8B\",\n    color: \"white\",\n  },\n}));\n\nconst options = [\"Frontend Developer\", \"Backend\", \"Testing\", \"System Admin\"];\n\nconst ITEM_HEIGHT = 48;\nfunction App() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <div className=\"hamburger\">\n        <IconButton\n          aria-label=\"more\"\n          aria-controls=\"long-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n        >\n          <ReorderRoundedIcon />\n        </IconButton>\n        <Menu\n          id=\"long-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={open}\n          onClose={handleClose}\n          PaperProps={{\n            style: {\n              maxHeight: ITEM_HEIGHT * 4.5,\n              width: \"20ch\",\n            },\n          }}\n        >\n          {options.map((option) => (\n            <MenuItem\n              key={option}\n              selected={option === \"Pyxis\"}\n              onClick={handleClose}\n            >\n              {option}\n            </MenuItem>\n          ))}\n        </Menu>\n      </div>\n      <div>\n        <Typography\n          variant=\"h2\"\n          component=\"h2\"\n          gutterBottom\n          classes={{\n            root: classes.root,\n            label: classes.label,\n          }}\n        >\n          Find Your <br></br>Dream Job <br></br>With Us\n        </Typography>\n      </div>\n      <div className=\"text\">\n        {\" \"}\n        <Typography\n          variant=\"p\"\n          component=\"p\"\n          gutterBottom\n          classes={{\n            p: classes.p,\n          }}\n        >\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit Lorem ipsum\n          dolor sit amet, consectetur adipiscing elit Lorem ipsum dolor sit\n          amet, consectetur adipiscing elit Lorem ipsum dolor sit amet,\n          consectetur adipiscing elit Lorem ipsum dolor sit amet, consectetur\n          adipiscing elit\n        </Typography>\n      </div>\n      <Button\n        variant=\"contained\"\n        size=\"large\"\n        color=\"primary\"\n        className={classes.margin}\n      >\n        Apply\n      </Button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}